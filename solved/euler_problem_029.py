 # Created by Ingrid Avendano on 10/28/13. 
#
#
# Project Euler - Problem 29: Distinct powers
#
# Consider all integer combinations of ab for 2 <= a <= 5 and 2 <= b <= 5:
#
# 22=4, 23=8, 24=16, 25=32
# 32=9, 33=27, 34=81, 35=243
# 42=16, 43=64, 44=256, 45=1024
# 52=25, 53=125, 54=625, 55=3125
# If they are then placed in numerical order, with any repeats removed, 
# we get the following sequence of 15 distinct terms:
#
# 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
#
# How many distinct terms are in the sequence generated by ab for 
# 2 <= a <= 100 and 2 <= b <= 100?


def distinct_powers(min_base, max_base, min_power, max_power):
	distinct_terms = []

	for base in range(min_base, max_base+1):
		for power in range(min_power, max_power+1):
			number = base**power
			if not number in distinct_terms:
				distinct_terms.append(number)

	return len(distinct_terms)


def main():
	solution = distinct_powers(2,100,2,100)
	print "Solution to problem 29:", solution


main()
